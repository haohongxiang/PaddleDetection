metric: KITTI3D
num_classes: 3

# ├── kitti3d
# │   ├── ImageSets
# │   ├── testing
# │   │   ├── calib
# │   │   ├── image_2
# │   │   ├── velodyne
# │   ├── training
# │   │   ├── calib
# │   │   ├── image_2
# │   │   ├── label_2
# │   │   ├── velodyne
# https://github.com/traveller59/second.pytorch/tree/master/second/data/ImageSets



# wget -c  https://raw.githubusercontent.com/traveller59/second.pytorch/master/second/data/ImageSets/test.txt --no-check-certificate --content-disposition -O ./dataset/kitti3d/ImageSets/test.txt
# wget -c  https://raw.githubusercontent.com/traveller59/second.pytorch/master/second/data/ImageSets/train.txt --no-check-certificate --content-disposition -O ./dataset/kitti3d/ImageSets/train.txt
# wget -c  https://raw.githubusercontent.com/traveller59/second.pytorch/master/second/data/ImageSets/val.txt --no-check-certificate --content-disposition -O ./dataset/kitti3d/ImageSets/val.txt
# wget -c  https://raw.githubusercontent.com/traveller59/second.pytorch/master/second/data/ImageSets/trainval.txt --no-check-certificate --content-disposition -O ./dataset/kitti3d/ImageSets/trainval.txt


TrainDataset:
  !MonoKitti3d
    dataset_dir: dataset/kitti3d
    image_dir: training/
    anno_path: ImageSets/train.txt
    data_fields: ['image', 'label', 'calib', 'velodyne']

EvalDataset:
  !MonoKitti3d
    dataset_dir: dataset/kitti3d
    image_dir: training/
    anno_path: ImageSets/val.txt
    data_fields: ['image', 'label', 'calib', 'velodyne']

TestDataset:
  !MonoKitti3d
    dataset_dir: dataset/kitti3d
    image_dir: testing/
    anno_path: ImageSets/test.txt
    data_fields: ['image', 'calib', 'velodyne']


worker_num: 0

TrainReader:
  sample_transforms:
      - Decode: {}
      - Resize3d: {target_size: [375, 1242], keep_ratio: False}
      - RandomFlip3d: { prob: 0.5}
      - NormalizeImage: {is_scale: true, mean: [0.485,0.456,0.406], std: [0.229, 0.224,0.225]}
      - Permute: {}
  batch_size: 2
  shuffle: true
  drop_last: true
  collate_batch: ~
  use_shared_memory: false
  
EvalReader:
  sample_transforms:
      - Decode: {}
      - NormalizeImage: {is_scale: true, mean: [0.485,0.456,0.406], std: [0.229, 0.224,0.225]}
      - Permute: {}
  batch_size: 1
  shuffle: false
  drop_last: false
  drop_empty: false
  
TestReader:
  sample_transforms:
      - Decode: {}
      - NormalizeImage: {is_scale: true, mean: [0.485,0.456,0.406], std: [0.229, 0.224,0.225]}
      - Permute: {}
  batch_size: 1
  shuffle: false
  drop_last: false