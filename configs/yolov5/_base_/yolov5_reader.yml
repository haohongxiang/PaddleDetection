worker_num: 2
input_height: &input_height 640
input_width: &input_width 640
input_size: &input_size [*input_height, *input_width]

TrainReader:
  inputs_def:
    num_max_boxes: 120
  sample_transforms:
    - DecodeNormResize:
        target_size: *input_size
        keep_ratio: True
        # to_rgb: True
    - BboxPixelXYXY2NormCXCYWH: {}
    - MosaicPerspective: {mosaic_prob: 1.0, target_size: 640} #  # x y w h
    # - LetterBox: {target_size: 640, auto: False, scaleup: False}
    - BboxXYXY2XYWH: {}
    - NormalizeBox: {}
    - NormalizeImage: {mean: [0, 0, 0], std: [1, 1, 1], is_scale: True}
    - RGBReverse: {}
    - Permute: {}

  # batch_transforms:
  #   - Gt2Yolov5Target:
  #       anchor_masks: [[0, 1, 2], [3, 4, 5], [6, 7, 8]]
  #       anchors: [[10, 13], [16, 30], [33, 23],
  #                 [30, 61], [62, 45], [59, 119],
  #                 [116, 90], [156, 198], [373, 326]]
  #       downsample_ratios: [8, 16, 32]

  batch_size: 4
  # shuffle: False
  shuffle: True
  drop_last: True
  use_shared_memory: True
  collate_batch: True # False TODO
  mosaic_epoch: 300

EvalReader:
  sample_transforms:
    - Decode: {}
    - LetterBox: {target_size: 640, auto: True, scaleup: True}
    - NormalizeImage: {mean: [0, 0, 0], std: [1, 1, 1], is_scale: True}
    - Permute: {}
  batch_size: 1


TestReader:
  inputs_def:
    image_shape: [3, 640, 640]
  sample_transforms:
    - Decode: {}
    - LetterBox: {target_size: [640, 640], auto: False, scaleup: False}
    - NormalizeImage: {mean: [0, 0, 0], std: [1, 1, 1], is_scale: True}
    - Permute: {}
  batch_size: 1
